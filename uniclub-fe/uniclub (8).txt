-- ===================================================
-- 1. DATABASE
-- ===================================================
CREATE DATABASE uniclub;
USE uniclub;

-- ===================================================
-- 2. BẢNG CƠ BẢN
-- ===================================================
CREATE TABLE size (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(20) NOT NULL,
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE color (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  hex_code VARCHAR(7),
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE brand (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE category (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE role (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) NOT NULL UNIQUE,
  description VARCHAR(255),
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- ===================================================
-- 3. USER
-- ===================================================
CREATE TABLE user (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(50) UNIQUE NOT NULL,	
  password VARCHAR(255) NOT NULL,
  full_name VARCHAR(255),
  id_role INT,
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_user_role FOREIGN KEY (id_role) REFERENCES role(id)
);

-- ===================================================
-- 4. PRODUCT & VARIANT
-- ===================================================
CREATE TABLE product (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(255),
  information VARCHAR(255),
  price INT,
  id_brand INT,
  id_category INT,
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_product_brand FOREIGN KEY (id_brand) REFERENCES brand(id),
  CONSTRAINT FK_product_category FOREIGN KEY (id_category) REFERENCES category(id)
);

CREATE TABLE variant (
  sku INT AUTO_INCREMENT PRIMARY KEY,
  id_product INT NOT NULL,
  id_size INT,
  id_color INT,
  images VARCHAR(255),
  quantity INT DEFAULT 0, -- tồn kho hiện tại
  price INT,
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_variant_product FOREIGN KEY (id_product) REFERENCES product(id),
  CONSTRAINT FK_variant_size FOREIGN KEY (id_size) REFERENCES size(id),
  CONSTRAINT FK_variant_color FOREIGN KEY (id_color) REFERENCES color(id)
);

-- ===================================================
-- 5. SUPPLIER (NHÀ CUNG CẤP)
-- ===================================================
CREATE TABLE supplier (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  contact_person VARCHAR(100),
  phone VARCHAR(20),
  email VARCHAR(100),
  address VARCHAR(255),
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- ===================================================
-- 6. ORDER
-- ===================================================
CREATE TABLE orders (
  id INT AUTO_INCREMENT PRIMARY KEY,
  total INT,
  note VARCHAR(255),
  id_user INT,
  status VARCHAR(50) DEFAULT 'PENDING',  -- PENDING, PAID, CANCELLED, SHIPPED
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_order_user FOREIGN KEY (id_user) REFERENCES user(id)
);

CREATE TABLE order_variant (
  id_order INT,
  sku_variant INT,
  quantity INT,
  price INT,
  PRIMARY KEY (id_order, sku_variant),
  CONSTRAINT FK_ov_order FOREIGN KEY (id_order) REFERENCES orders(id),
  CONSTRAINT FK_ov_variant FOREIGN KEY (sku_variant) REFERENCES variant(sku)
);

-- ===================================================
-- 7. PAYMENT (TỐI ƯU HÓA - THAY CHO payment_method)
-- ===================================================
CREATE TABLE payment (
  id INT AUTO_INCREMENT PRIMARY KEY,
  order_id INT,
  payment_method ENUM('COD', 'VNPay') NOT NULL,
  transaction_no VARCHAR(100),
  amount INT,
  payment_status ENUM('PENDING', 'SUCCESS', 'FAILED') DEFAULT 'PENDING',
  paid_at TIMESTAMP NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_payment_order FOREIGN KEY (order_id) REFERENCES orders(id)
);

-- ===================================================
-- 8. BILLING DETAIL
-- ===================================================
CREATE TABLE billing_detail (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_order INT,
  full_name VARCHAR(100),
  phone VARCHAR(15),
  email VARCHAR(100),
  address VARCHAR(255),
  province VARCHAR(50),
  district VARCHAR(50),
  ward VARCHAR(50),
  note VARCHAR(255),
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_billing_order FOREIGN KEY (id_order) REFERENCES orders(id)
);

-- ===================================================
-- 9. REVIEW & COMMENT
-- ===================================================
CREATE TABLE review (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_product INT,
  id_user INT,
  star INT CHECK (star BETWEEN 1 AND 5),
  content VARCHAR(255),
  images VARCHAR(255),
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_review_product FOREIGN KEY (id_product) REFERENCES product(id),
  CONSTRAINT FK_review_user FOREIGN KEY (id_user) REFERENCES user(id)
);

CREATE TABLE comment (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_user INT NOT NULL,
  parent_id INT NULL,
  content VARCHAR(255),
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_comment_user FOREIGN KEY (id_user) REFERENCES user(id),
  CONSTRAINT FK_comment_parent FOREIGN KEY (parent_id) REFERENCES comment(id)
);

-- ===================================================
-- 10. CART & CART ITEM
-- ===================================================
CREATE TABLE cart (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_user INT NOT NULL,
  total_price INT DEFAULT 0,
  shipping_fee INT DEFAULT 0,
  note VARCHAR(255),
  status TINYINT DEFAULT 1,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_cart_user FOREIGN KEY (id_user) REFERENCES user(id)
);

CREATE TABLE cart_item (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_cart INT NOT NULL,
  id_sku INT NOT NULL,
  quantity INT DEFAULT 1,
  unit_price INT NOT NULL,
  subtotal INT GENERATED ALWAYS AS (quantity * unit_price) STORED,
  added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_cartitem_cart FOREIGN KEY (id_cart) REFERENCES cart(id) ON DELETE CASCADE,
  CONSTRAINT FK_cartitem_variant FOREIGN KEY (id_sku) REFERENCES variant(sku)
);

-- ===================================================
-- 11. GOODS RECEIPT (GRN - NHẬP HÀNG)
-- ===================================================

-- GRN_HEADER: phiếu nhập hàng (Goods Receipt Note)
CREATE TABLE grn_header (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_supplier INT NOT NULL,
  total_cost INT DEFAULT 0,
  note VARCHAR(255),
  received_date DATE DEFAULT (CURRENT_DATE),
  status ENUM('PENDING', 'COMPLETED', 'CANCELLED') DEFAULT 'PENDING',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_grn_supplier FOREIGN KEY (id_supplier) REFERENCES supplier(id)
);

-- GRN_DETAIL: chi tiết nhập hàng (từng SKU)
CREATE TABLE grn_detail (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_grn INT NOT NULL,
  id_variant INT NOT NULL,
  quantity INT NOT NULL,
  unit_cost INT NOT NULL,
  subtotal INT GENERATED ALWAYS AS (quantity * unit_cost) STORED,
  CONSTRAINT FK_grn_detail_grn FOREIGN KEY (id_grn) REFERENCES grn_header(id) ON DELETE CASCADE,
  CONSTRAINT FK_grn_detail_variant FOREIGN KEY (id_variant) REFERENCES variant(sku)
);
